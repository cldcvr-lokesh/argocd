
name: Create terraform plan

on:
  push:
    branches:
      - master
  pull_request:

jobs:

  terraform:
    name: "Terraform"
    runs-on: [self-hosted, my-runner]
    steps:
      # Checkout the code
      # Marketplace: https://github.com/marketplace/actions/checkout
      - name: "Setup - Checkout"
        uses: actions/checkout@v2.1.0
        with:
          fetch-depth: 0
      - run: git fetch origin
      - name: Setup Nodejs
        uses: actions/setup-node@v1

      # Downloads a specific version of Terraform CLI and adds it to PATH
      # Marketplace: https://github.com/marketplace/actions/hashicorp-setup-terraform
      - name: "Setup - Terraform CLI"
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.13.5

      # Init pulls credentials from the .aws/credentials file by default
      - name: "Run - Terraform Init"
        run: |
              ls -l
              dirs=$(git diff 'remotes/origin/master' remotes/origin/${GITHUB_HEAD_REF} --name-only | grep -v '^.github/' | xargs dirname  | uniq)
              for dir in $dirs
              do
              cd ${GITHUB_WORKSPACE}/$dir && terraform init -input=false
              done


      # The id value is used for reference in the comment step via "steps.plan.outputs.stdout"
      # Note: Color is disabled to prevent messy characters from appearing in the pull request comment
      - name: "Run - Terraform Plan & Apply"
        id: plan
        if: github.event_name == 'pull_request'
        run: |
            dirs=$(git diff 'remotes/origin/master' remotes/origin/${GITHUB_HEAD_REF}  --name-only | grep -v '^.github/' | xargs dirname  | uniq)
            for dir in $dirs
            do
            echo "Terraform Dir : $dir"
            cd ${GITHUB_WORKSPACE}/$dir && terraform plan -input=false -no-color > tfplan
            done

            echo '`' > tfplan
            for x in $(git diff 'remotes/origin/master' remotes/origin/${GITHUB_HEAD_REF} --name-only | grep -v '^.github/' | xargs dirname  | uniq)
            do
            cat >> ${GITHUB_WORKSPACE}/tfplan <<EOF
            #### Terraform Plan
            <details><summary>Show Plan</summary>
            \`\`\`\n
            `cat ${GITHUB_WORKSPACE}/${x}/tfplan`
            \`\`\`
            EOF
            done
            echo '`' >> tfplan

      - name: Readi tfplan
        id: data
        uses: juliangruber/read-file-action@v1
        with:
          path: ./tfplan

      - name: Update Pull Request
        uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: ${{ steps.data.outputs.content }}
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1


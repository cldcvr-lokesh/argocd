
name: Create terraform plan

on:
  push:
    branches:
      - master
  pull_request:

jobs:

  terraform:
    name: "Terraform"
    runs-on: [self-hosted, my-runner]
    steps:
      # Checkout the code
      # Marketplace: https://github.com/marketplace/actions/checkout
      - name: "Setup - Checkout"
        uses: actions/checkout@v2.1.0
        with:
          fetch-depth: 0
      - run: git fetch origin
      - name: Setup Nodejs
        uses: actions/setup-node@v1

      # Downloads a specific version of Terraform CLI and adds it to PATH
      # Marketplace: https://github.com/marketplace/actions/hashicorp-setup-terraform
      - name: "Setup - Terraform CLI"
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.13.5

      # Init pulls credentials from the .aws/credentials file by default
      - name: "Run - Terraform Init"
        run: |
              ls -l
              dirs=$(git diff 'remotes/origin/master' remotes/origin/${GITHUB_HEAD_REF} --name-only | grep -v '^.github/' | xargs dirname  | uniq)
              for dir in $dirs
              do
              cd ${GITHUB_WORKSPACE}/$dir && terraform init -input=false
              done


      # The id value is used for reference in the comment step via "steps.plan.outputs.stdout"
      # Note: Color is disabled to prevent messy characters from appearing in the pull request comment
      - name: "Run - Terraform Plan & Apply"
        id: plan
        if: github.event_name == 'pull_request'
        run: |
            dirs=$(git diff 'remotes/origin/master' remotes/origin/${GITHUB_HEAD_REF}  --name-only | grep -v '^.github/' | xargs dirname  | uniq)
            for dir in $dirs
            do
            cd ${GITHUB_WORKSPACE}/$dir && terraform plan -input=false -no-color > tfplan
            cat >> ${GITHUB_WORKSPACE}/tfplan <<EOF
            <details><summary>Show Plan for ${GITHUB_WORKSPACE}/$dir</summary>

            \`\`\`
            `cat tfplan`
            \`\`\`

            </details>
            EOF
            done

      - name: Read tfplan
        id: data
        uses: juliangruber/read-file-action@v1
        with:
          path: ./tfplan

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "${{ steps.data.outputs.content }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format
            #### Terraform Initialization
            #### Terraform Validation
            #### Terraform Plan

            ```
            /home/ubuntu/actions-runner/_work/_temp/08ff064a-31b2-4c30-9906-7d384b79a557/terraform-bin plan -input=false -no-color
            Refreshing Terraform state in-memory prior to plan...
            The refreshed state will be used to calculate this plan, but will not be
            persisted to local or remote state storage.

            data.aws_ami.ubuntu: Refreshing state...

            ------------------------------------------------------------------------

            An execution plan has been generated and is shown below.
            Resource actions are indicated with the following symbols:
              + create

            Terraform will perform the following actions:

              # aws_instance.web will be created
              + resource "aws_instance" "web" {
                  + ami                                  = "ami-01079af93e791f059"
                  + arn                                  = (known after apply)
                  + associate_public_ip_address          = (known after apply)
                  + availability_zone                    = (known after apply)
                  + cpu_core_count                       = (known after apply)
                  + cpu_threads_per_core                 = (known after apply)
                  + disable_api_termination              = (known after apply)
                  + ebs_optimized                        = (known after apply)
                  + get_password_data                    = false
                  + host_id                              = (known after apply)
                  + id                                   = (known after apply)
                  + instance_initiated_shutdown_behavior = (known after apply)
                  + instance_state                       = (known after apply)
                  + instance_type                        = "t3.micro"
                  + ipv6_address_count                   = (known after apply)
                  + ipv6_addresses                       = (known after apply)
                  + key_name                             = (known after apply)
                  + monitoring                           = (known after apply)
                  + outpost_arn                          = (known after apply)
                  + password_data                        = (known after apply)
                  + placement_group                      = (known after apply)
                  + placement_partition_number           = (known after apply)
                  + primary_network_interface_id         = (known after apply)
                  + private_dns                          = (known after apply)
                  + private_ip                           = (known after apply)
                  + public_dns                           = (known after apply)
                  + public_ip                            = (known after apply)
                  + secondary_private_ips                = (known after apply)
                  + security_groups                      = (known after apply)
                  + source_dest_check                    = true
                  + subnet_id                            = (known after apply)
                  + tags                                 = {
                      + "Name" = "HelloWorld"
                    }
                  + tags_all                             = {
                      + "Name" = "HelloWorld"
                    }
                  + tenancy                              = (known after apply)
                  + user_data                            = (known after apply)
                  + user_data_base64                     = (known after apply)
                  + vpc_security_group_ids               = (known after apply)

                  + capacity_reservation_specification {
                      + capacity_reservation_preference = (known after apply)

                      + capacity_reservation_target {
                          + capacity_reservation_id = (known after apply)
                        }
                    }

                  + ebs_block_device {
                      + delete_on_termination = (known after apply)
                      + device_name           = (known after apply)
                      + encrypted             = (known after apply)
                      + iops                  = (known after apply)
                      + kms_key_id            = (known after apply)
                      + snapshot_id           = (known after apply)
                      + tags                  = (known after apply)
                      + throughput            = (known after apply)
                      + volume_id             = (known after apply)
                      + volume_size           = (known after apply)
                      + volume_type           = (known after apply)
                    }

                  + enclave_options {
                      + enabled = (known after apply)
                    }

                  + ephemeral_block_device {
                      + device_name  = (known after apply)
                      + no_device    = (known after apply)
                      + virtual_name = (known after apply)
                    }

                  + metadata_options {
                      + http_endpoint               = (known after apply)
                      + http_put_response_hop_limit = (known after apply)
                      + http_tokens                 = (known after apply)
                      + instance_metadata_tags      = (known after apply)
                    }

                  + network_interface {
                      + delete_on_termination = (known after apply)
                      + device_index          = (known after apply)
                      + network_interface_id  = (known after apply)
                    }

                  + root_block_device {
                      + delete_on_termination = (known after apply)
                      + device_name           = (known after apply)
                      + encrypted             = (known after apply)
                      + iops                  = (known after apply)
                      + kms_key_id            = (known after apply)
                      + tags                  = (known after apply)
                      + throughput            = (known after apply)
                      + volume_id             = (known after apply)
                      + volume_size           = (known after apply)
                      + volume_type           = (known after apply)
                    }
                }

            Plan: 1 to add, 0 to change, 0 to destroy.

            ------------------------------------------------------------------------

            Note: You didn't specify an "-out" parameter to save this plan, so Terraform
            can't guarantee that exactly these actions will be performed if
            "terraform apply" is subsequently run.

            ::debug::Terraform exited with code 0.
            ::debug::stdout: Refreshing Terraform state in-memory prior to plan...%0AThe refreshed state will be used to calculate this plan, but will not be%0Apersisted to local or remote state storage.%0A%0Adata.aws_ami.ubuntu: Refreshing state...%0A%0A------------------------------------------------------------------------%0A%0AAn execution plan has been generated and is shown below.%0AResource actions are indicated with the following symbols:%0A  + create%0A%0ATerraform will perform the following actions:%0A%0A  # aws_instance.web will be created%0A  + resource "aws_instance" "web" {%0A      + ami                                  = "ami-01079af93e791f059"%0A      + arn                                  = (known after apply)%0A      + associate_public_ip_address          = (known after apply)%0A      + availability_zone                    = (known after apply)%0A      + cpu_core_count                       = (known after apply)%0A      + cpu_threads_per_core                 = (known after apply)%0A      + disable_api_termination              = (known after apply)%0A      + ebs_optimized                        = (known after apply)%0A      + get_password_data                    = false%0A      + host_id                              = (known after apply)%0A      + id                                   = (known after apply)%0A      + instance_initiated_shutdown_behavior = (known after apply)%0A      + instance_state                       = (known after apply)%0A      + instance_type                        = "t3.micro"%0A      + ipv6_address_count                   = (known after apply)%0A      + ipv6_addresses                       = (known after apply)%0A      + key_name                             = (known after apply)%0A      + monitoring                           = (known after apply)%0A      + outpost_arn                          = (known after apply)%0A      + password_data                        = (known after apply)%0A      + placement_group                      = (known after apply)%0A      + placement_partition_number           = (known after apply)%0A      + primary_network_interface_id         = (known after apply)%0A      + private_dns                          = (known after apply)%0A      + private_ip                           = (known after apply)%0A      + public_dns                           = (known after apply)%0A      + public_ip                            = (known after apply)%0A      + secondary_private_ips                = (known after apply)%0A      + security_groups                      = (known after apply)%0A      + source_dest_check                    = true%0A      + subnet_id                            = (known after apply)%0A      + tags                                 = {%0A          + "Name" = "HelloWorld"%0A        }%0A      + tags_all                             = {%0A          + "Name" = "HelloWorld"%0A        }%0A      + tenancy                              = (known after apply)%0A      + user_data                            = (known after apply)%0A      + user_data_base64                     = (known after apply)%0A      + vpc_security_group_ids               = (known after apply)%0A%0A      + capacity_reservation_specification {%0A          + capacity_reservation_preference = (known after apply)%0A%0A          + capacity_reservation_target {%0A              + capacity_reservation_id = (known after apply)%0A            }%0A        }%0A%0A      + ebs_block_device {%0A          + delete_on_termination = (known after apply)%0A          + device_name           = (known after apply)%0A          + encrypted             = (known after apply)%0A          + iops                  = (known after apply)%0A          + kms_key_id            = (known after apply)%0A          + snapshot_id           = (known after apply)%0A          + tags                  = (known after apply)%0A          + throughput            = (known after apply)%0A          + volume_id             = (known after apply)%0A          + volume_size           = (known after apply)%0A          + volume_type           = (known after apply)%0A        }%0A%0A      + enclave_options {%0A          + enabled = (known after apply)%0A        }%0A%0A      + ephemeral_block_device {%0A          + device_name  = (known after apply)%0A          + no_device    = (known after apply)%0A          + virtual_name = (known after apply)%0A        }%0A%0A      + metadata_options {%0A          + http_endpoint               = (known after apply)%0A          + http_put_response_hop_limit = (known after apply)%0A          + http_tokens                 = (known after apply)%0A          + instance_metadata_tags      = (known after apply)%0A        }%0A%0A      + network_interface {%0A          + delete_on_termination = (known after apply)%0A          + device_index          = (known after apply)%0A          + network_interface_id  = (known after apply)%0A        }%0A%0A      + root_block_device {%0A          + delete_on_termination = (known after apply)%0A          + device_name           = (known after apply)%0A          + encrypted             = (known after apply)%0A          + iops                  = (known after apply)%0A          + kms_key_id            = (known after apply)%0A          + tags                  = (known after apply)%0A          + throughput            = (known after apply)%0A          + volume_id             = (known after apply)%0A          + volume_size           = (known after apply)%0A          + volume_type           = (known after apply)%0A        }%0A    }%0A%0APlan: 1 to add, 0 to change, 0 to destroy.%0A%0A------------------------------------------------------------------------%0A%0ANote: You didn't specify an "-out" parameter to save this plan, so Terraform%0Acan't guarantee that exactly these actions will be performed if%0A"terraform apply" is subsequently run.%0A%0A
            ::debug::stderr:
            ::debug::exitcode: 0
            ::set-output name=stdout::Refreshing Terraform state in-memory prior to plan...%0AThe refreshed state will be used to calculate this plan, but will not be%0Apersisted to local or remote state storage.%0A%0Adata.aws_ami.ubuntu: Refreshing state...%0A%0A------------------------------------------------------------------------%0A%0AAn execution plan has been generated and is shown below.%0AResource actions are indicated with the following symbols:%0A  + create%0A%0ATerraform will perform the following actions:%0A%0A  # aws_instance.web will be created%0A  + resource "aws_instance" "web" {%0A      + ami                                  = "ami-01079af93e791f059"%0A      + arn                                  = (known after apply)%0A      + associate_public_ip_address          = (known after apply)%0A      + availability_zone                    = (known after apply)%0A      + cpu_core_count                       = (known after apply)%0A      + cpu_threads_per_core                 = (known after apply)%0A      + disable_api_termination              = (known after apply)%0A      + ebs_optimized                        = (known after apply)%0A      + get_password_data                    = false%0A      + host_id                              = (known after apply)%0A      + id                                   = (known after apply)%0A      + instance_initiated_shutdown_behavior = (known after apply)%0A      + instance_state                       = (known after apply)%0A      + instance_type                        = "t3.micro"%0A      + ipv6_address_count                   = (known after apply)%0A      + ipv6_addresses                       = (known after apply)%0A      + key_name                             = (known after apply)%0A      + monitoring                           = (known after apply)%0A      + outpost_arn                          = (known after apply)%0A      + password_data                        = (known after apply)%0A      + placement_group                      = (known after apply)%0A      + placement_partition_number           = (known after apply)%0A      + primary_network_interface_id         = (known after apply)%0A      + private_dns                          = (known after apply)%0A      + private_ip                           = (known after apply)%0A      + public_dns                           = (known after apply)%0A      + public_ip                            = (known after apply)%0A      + secondary_private_ips                = (known after apply)%0A      + security_groups                      = (known after apply)%0A      + source_dest_check                    = true%0A      + subnet_id                            = (known after apply)%0A      + tags                                 = {%0A          + "Name" = "HelloWorld"%0A        }%0A      + tags_all                             = {%0A          + "Name" = "HelloWorld"%0A        }%0A      + tenancy                              = (known after apply)%0A      + user_data                            = (known after apply)%0A      + user_data_base64                     = (known after apply)%0A      + vpc_security_group_ids               = (known after apply)%0A%0A      + capacity_reservation_specification {%0A          + capacity_reservation_preference = (known after apply)%0A%0A          + capacity_reservation_target {%0A              + capacity_reservation_id = (known after apply)%0A            }%0A        }%0A%0A      + ebs_block_device {%0A          + delete_on_termination = (known after apply)%0A          + device_name           = (known after apply)%0A          + encrypted             = (known after apply)%0A          + iops                  = (known after apply)%0A          + kms_key_id            = (known after apply)%0A          + snapshot_id           = (known after apply)%0A          + tags                  = (known after apply)%0A          + throughput            = (known after apply)%0A          + volume_id             = (known after apply)%0A          + volume_size           = (known after apply)%0A          + volume_type           = (known after apply)%0A        }%0A%0A      + enclave_options {%0A          + enabled = (known after apply)%0A        }%0A%0A      + ephemeral_block_device {%0A          + device_name  = (known after apply)%0A          + no_device    = (known after apply)%0A          + virtual_name = (known after apply)%0A        }%0A%0A      + metadata_options {%0A          + http_endpoint               = (known after apply)%0A          + http_put_response_hop_limit = (known after apply)%0A          + http_tokens                 = (known after apply)%0A          + instance_metadata_tags      = (known after apply)%0A        }%0A%0A      + network_interface {%0A          + delete_on_termination = (known after apply)%0A          + device_index          = (known after apply)%0A          + network_interface_id  = (known after apply)%0A        }%0A%0A      + root_block_device {%0A          + delete_on_termination = (known after apply)%0A          + device_name           = (known after apply)%0A          + encrypted             = (known after apply)%0A          + iops                  = (known after apply)%0A          + kms_key_id            = (known after apply)%0A          + tags                  = (known after apply)%0A          + throughput            = (known after apply)%0A          + volume_id             = (known after apply)%0A          + volume_size           = (known after apply)%0A          + volume_type           = (known after apply)%0A        }%0A    }%0A%0APlan: 1 to add, 0 to change, 0 to destroy.%0A%0A------------------------------------------------------------------------%0A%0ANote: You didn't specify an "-out" parameter to save this plan, so Terraform%0Acan't guarantee that exactly these actions will be performed if%0A"terraform apply" is subsequently run.%0A%0A
            ::set-output name=stderr::
            ::set-output name=exitcode::0
            ```
            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

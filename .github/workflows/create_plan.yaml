name: Create terraform plan

on:
  push:
    branches:
      - master
  pull_request:

jobs:

  terraform:
    name: "Terraform"
    runs-on: [self-hosted, my-runner]
    steps:
      # Checkout the code
      # Marketplace: https://github.com/marketplace/actions/checkout
      - name: "Setup - Checkout"
        uses: actions/checkout@v2.1.0
        with:
          fetch-depth: 0
      - run: git fetch origin
      - name: Setup Nodejs
        uses: actions/setup-node@v1

      # Downloads a specific version of Terraform CLI and adds it to PATH
      # Marketplace: https://github.com/marketplace/actions/hashicorp-setup-terraform
      - name: "Setup - Terraform CLI"
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.13.5

      - name: "Run - Terraform Init"
        run: |
              ls -l
              # Init pulls credentials from the .aws/credentials file by default
              dirs=$(git diff 'remotes/origin/master' remotes/origin/${GITHUB_HEAD_REF} --name-only | grep -v '^.github/' | xargs dirname  | uniq)
              for dir in $dirs
              do
              cd ${GITHUB_WORKSPACE}/$dir && terraform init -input=false
              done


      # The id value is used for reference in the comment step via "steps.plan.outputs.stdout"
      # Note: Color is disabled to prevent messy characters from appearing in the pull request comment
      - name: "Run - Terraform Plan & Apply"
        id: plan
        run: |
            dirs=$(git diff 'remotes/origin/master' remotes/origin/${GITHUB_HEAD_REF}  --name-only | grep -v '^.github/' | xargs dirname  | uniq)
            for dir in $dirs
            do
            cd ${GITHUB_WORKSPACE}/$dir && terraform plan -input=false -no-color > tfplan
            cat >> ${GITHUB_WORKSPACE}/tfplan <<EOF
            #### Terraform Plan for ${GITHUB_WORKSPACE}/$dir
            <details><summary>Show Plan</summary>
            \`\`\`
            `cat ${GITHUB_WORKSPACE}/$dir/tfplan`
            \`\`\`
            </details>
            EOF
            done
            body=`cat ${GITHUB_WORKSPACE}/tfplan`
            body="${body//'%'/'%25'}"
            body="${body//$'\n'/'%0A'}"
            body="${body//$'\r'/'%0D'}"
            echo "$body"

      - name: Create comment
        if: github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          token: ${{ secrets.GITHUB_TOKEN }}
          body: ${{ steps.plan.outputs.stdout }}

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
